toggles::fzf() {
  if [ $commandx[fzf] ]; then
    [[ -s "${HOME}/.fzf.zsh" ]] && source "${HOME}/.fzf.zsh"
  fi
}

toggles::tfenv() {
  if [ $commands[tfenv] ]; then
    export PATH="${HOME}/.tfenv/bin:${PATH}"
  fi
}

toggles::pyenv() {
  if [ $commands[pyenv] ]; then
    export CFLAGS="-O2 -I$(brew --prefix openssl)/include"
    export LDFLAGS="-L$(brew --prefix openssl)/lib"

    eval "$(pyenv init -)"
  fi
}

toggles::nvm() {
  if [ -s "/usr/local/opt/nvm/nvm.sh" ]; then
    export NVM_DIR="${HOME}/.nvm"

    [ -d "${NVM_DIR}" ] || mkdir -p "${NVM_DIR}"
    [ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"
  fi
}

toggles::nodenv() {
  if [ $commands[nodenv] ]; then
    eval "$(nodenv init -)"
  fi
}

toggles::rbenv() {
  if [ $commands[rbenv] ]; then
    eval "$(rbenv init -)"
  fi
}

toggles::go() {
  [[ -s "${HOME}/.gorc" ]] && source "${HOME}/.gorc"
}

toggles::github() {
  [[ -d "${HOME}/.githubrc" ]] && source "${HOME}/.githubrc"
}

toggles::travis() {
  [[ -d "${HOME}/.travis/travis.sh" ]] && source "${HOME}/.travis/travis.sh"
}

toggles::direnv() {
  if [ $commands[direnv] ]; then
    eval "$(direnv hook zsh)"
  fi
}

toggles::log() {
  local message="${1}"

  case "${TOGGLES_VERBOSE}" in
    True|true)
      [[ -n "${message}" ]] && echo -en "${message}"
      ;;
  esac
}

# ::main::
toggles::log "Toggles: "
for t activated in ${(kv)TOGGLES_CONFIGURATION}; do
  if [ "${activated}" = true ]; then
    if typeset -f toggles::${t} >/dev/null; then
      toggles::${t} && toggles::log "${t}:√ "
    fi
  fi
done
echo
