#
# vim
#
- name: VIM config files
  ansible.builtin.file:
    src: "{{ role_path }}/files/vim/{{ item }}"
    dest: "{{ dotfiles_home_directory }}/{{ item }}"
    state: link
    force: true
  loop:
    "{{ dotfiles_vim.config.files | flatten(levels=1) }}"
  tags:
    - vim

- name: VIM config files cleanup
  ansible.builtin.file:
    path: "{{ dotfiles_home_directory }}/{{ item }}"
    state: absent
  loop:
    "{{ dotfiles_vim.config.files | flatten(levels=1) }}"
  tags:
    - vimcleanup
    - never

- name: VIM config directory
  ansible.builtin.file:
    path: "{{ dotfiles_home_directory }}/.vim"
    mode: "{{ dotfiles_directory_mode }}"
    state: directory
  register: dotfiles_vim_config_directory
  tags:
    - vim

- name: VIM config directory stat
  ansible.builtin.stat:
    path: "{{ dotfiles_home_directory }}/.vim"
  register: dotfiles_vim_config_directory_stat
  tags:
    - vimcleanup
    - never

- name: VIM autoload directory
  ansible.builtin.file:
    path: "{{ dotfiles_home_directory }}/.vim/autoload"
    mode: "{{ dotfiles_directory_mode }}"
    state: directory
  when: dotfiles_vim_config_directory is defined
  register: dotfiles_vim_autoload_directory
  tags:
    - vim

- name: VIM plug installation
  ansible.builtin.get_url:
    url: "{{ vim.plug.url }}"
    dest: "{{ dotfiles_home_directory }}/.vim/autoload/plug.vim"
    mode: "{{ dotfiles_directory_mode }}"
  tags:
    - vim

- name: VIM plug installation cleanup
  ansible.builtin.file:
    path: "{{ dotfiles_home_directory }}/.vim"
    state: absent
  when: dotfiles_vim_config_directory_stat.stat.exists
  tags:
    - vimcleanup
    - never

- name: VIM plug plugins installation
  ansible.builtin.debug:
    msg: "To complete the installation of your plugins you must execute: 'vim +PlugUpdate'"
  tags:
    - vim
