---
#
# zim framework
#
- name: .zimrc check
  ansible.builtin.stat:
    path: "{{ home_directory }}/.zimrc"
  register: zimrc
  tags:
    - zimfw
    - install

- name: .zim check
  ansible.builtin.stat:
    path: "{{ home_directory }}/.zim"
  register: zim
  tags:
    - zimfw
    - install

- name: zimfw installation
  ansible.builtin.shell: "curl -fsSL {{ zimfw.url }} | zsh"
  args:
    warn: no
  when: zimrc.stat.exists == False and zim.stat.exists == False
  tags:
    - zimfw
    - install

- name: zimfw configuration
  ansible.builtin.file:
    src: "{{ role_path }}/files/zimfw/{{ item }}"
    dest: "{{ home_directory }}/{{ item }}"
    state: link
    force: yes
  with_items:
    - "{{ zimfw.files }}"
  tags:
    - zimfw
    - config

#
# zsh configuration
#
- name: Shell zsh configuration
  ansible.builtin.file:
    src: "{{ role_path }}/files/shell/zsh/{{ item }}"
    dest: "{{ home_directory }}/{{ item }}"
    state: link
    force: yes
  with_items:
    - "{{ zsh.files }}"
  tags:
    - dotfiles
    - zsh

- name: Shell zsh custom functions
  ansible.builtin.file:
    src: "{{ role_path }}/files/shell/zsh.d"
    dest: "{{ home_directory }}/.zsh.d"
    state: link
    force: yes
  tags:
    - dotfiles
    - zsh

#
# RC files
#
- name: RC files
  ansible.builtin.file:
    src: "{{ role_path }}/files/shell/rc/{{ item }}"
    dest: "{{ home_directory }}/{{ item }}"
    state: link
    force: yes
  with_items:
    - "{{ rc.files }}"
  tags:
    - dotfiles
    - rc

#
# Tools
#
- name: Tools configuration files
  ansible.builtin.file:
    src: "{{ role_path }}/files/tools/{{ item }}"
    dest: "{{ home_directory }}/{{ item }}"
    state: link
    force: yes
  with_items:
    - "{{ tools.files }}"
  tags:
    - dotfiles
    - tools

#
# Templates
#
- name: Skeleton templates
  ansible.builtin.file:
    src: "{{ role_path }}/files/skeletons"
    dest: "{{ home_directory }}/.skeletons"
    state: link
    force: yes
  tags:
    - dotfiles
    - skeletons

#
# Scripts
#
- name: Custom Scripts directory
  ansible.builtin.file:
    src: "{{ role_path }}/files/shell/scripts"
    dest: "{{ home_directory }}/.bin"
    state: link
    force: yes
  tags:
    - dotfiles
    - scripts


- name: SSH directory
  ansible.builtin.file:
    path: "{{ home_directory }}/.ssh"
    state: directory
  tags:
    - dotfiles
    - ssh

- name: SSH directory stat
  ansible.builtin.stat:
    path: "{{ home_directory }}/.ssh"
  register: ssh_directory
  tags:
    - dotfiles
    - ssh

- name: SSH config
  ansible.builtin.file:
    src: "{{ role_path }}/files/ssh/config"
    dest: "{{ home_directory }}/.ssh/config"
    state: link
    force: yes
  when: ssh_directory.stat.exists
  tags:
    - dotfiles
    - ssh

#
# Languages
#
- name: golang support
  ansible.builtin.file:
    src: "{{ role_path }}/files/languages/go/.gorc"
    dest: "{{ home_directory }}/.gorc"
    state: link
    force: yes
  tags:
    - dotfiles
    - languages
    - golang

- name: rust cargo directory
  ansible.builtin.stat:
    path: "{{ home_directory }}/.cargo"
  register: cargo_directory
  tags:
    - dotfiles
    - languages
    - rust

- name: rust support
  ansible.builtin.file:
    src: "{{ role_path }}/files/languages/rust/env"
    dest: "{{ home_directory }}/.cargo/env"
    state: link
    force: yes
  when: cargo_directory.stat.exists
  tags:
    - dotfiles
    - languages
    - rust

# 
# Homebrew
#
- name: Homebrew install
  ansible.builtin.debug:
    msg: "How to install: {{ homebrew.install.url }}"
  tags:
    - dotfiles
    - homebrew

- name: Homebrew uninstall
  ansible.builtin.debug:
    msg: "How to uninstall: {{ homebrew.uninstall.url }}"
  tags:
    - dotfiles
    - homebrew

#
# vim
#
- name: vim config files
  ansible.builtin.file:
    src: "{{ role_path }}/files/vim/{{ item }}"
    dest: "{{ home_directory }}/{{ item }}"
    state: link
    force: yes
  with_items:
    - "{{ vim.config.files }}"
  tags:
    - dotfiles
    - vim

- name: vim plug installation
  ansible.builtin.shell: "curl -sfLo {{ home_directory }}/.vim/autoload/plug.vim --create-dirs {{ vim.plug.url }}"
  tags:
    - dotfiles
    - vim

- name: vim plug plugins installation
  ansible.builtin.debug:
    msg: "To complete the installation of your plugins you must execute: 'vim +PlugUpdate'"
  tags:
    - dotfiles
    - vim
